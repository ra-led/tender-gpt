version: '3.8'services:  # ----------------------------------------------------------------------------  # 1) nginx-proxy: listens on 80/443, auto-generates nginx conf for us  # ----------------------------------------------------------------------------  nginx-proxy:    image: jwilder/nginx-proxy:latest    container_name: nginx-proxy    restart: always    ports:      - "80:80"      - "443:443"    volumes:      - /var/run/docker.sock:/tmp/docker.sock:ro      - ./certs:/etc/nginx/certs      # where certs are stored      - ./vhost.d:/etc/nginx/vhost.d   # per-virtual-host custom config (optional)      - ./html:/usr/share/nginx/html   # for ACME challenges  # ----------------------------------------------------------------------------  # 2) letsencrypt companion: watches nginx-proxy, automatically obtains/renews  #    certs via the HTTP-01 challenge.  # ----------------------------------------------------------------------------  nginx-letsencrypt:    image: jrcs/letsencrypt-nginx-proxy-companion:latest    container_name: nginx-letsencrypt    restart: always    depends_on:      - nginx-proxy    volumes:      - /var/run/docker.sock:/var/run/docker.sock:ro      - ./certs:/etc/nginx/certs      - ./html:/usr/share/nginx/html  # ----------------------------------------------------------------------------  # 3) flask web app  # ----------------------------------------------------------------------------  web:    build: ./web    container_name: web-app    restart: always    expose:      - "3333"    # internal port only    environment:      # tell nginx-proxy what hostname(s) to generate for      - VIRTUAL_HOST=tender-gpt.ru,tender-gpt.ru      # letâ€™s encrypt will issue a cert for these      - LETSENCRYPT_HOST=tender-gpt.ru,www.tender-gpt.ru      - LETSENCRYPT_EMAIL=yura@tender-gpt.ru    volumes:      - ./data:/app/data    depends_on:      - nginx-proxy# volumes for persisting certs & ACME challengesvolumes:  certs:  html:  vhost.d: